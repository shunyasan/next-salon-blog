// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model OriginCategory {
  id String @id
  name String //広域カテゴリ名
  path String @default("") //リンクのパス
  imgUrlLady String //女性の画像
  imgUrlMen String //男性の画像
  aboutCategories AboutCategory[]
}

model AboutCategory {
  id String  @id
  name String
  imgUrlLady String
  imgUrlMen String
  set Boolean
  originId String
  origin OriginCategory @relation(fields: [originId], references: [id])
  // baseParts BaseParts[]
  basicCategory BasicCategory[]
}

model BasicCategory {
  id String  @id
  name String
  aboutCategoryId String
  aboutCategory AboutCategory @relation(fields: [aboutCategoryId], references: [id])
  baseParts BaseParts[]
}

model BaseParts {
  id String @id
  name String //部位名
  description String? //備考
  gender Gender @default(both)
  rangeAttention Boolean @default(true)
  basicCategoryId String
  basicCategory BasicCategory @relation(fields: [basicCategoryId], references: [id])
  // aboutCategoryId String
  // aboutCategory AboutCategory @relation(fields: [aboutCategoryId], references: [id])
  parts BaseParts_Parts[] 
}

model BaseParts_Parts {
  basePartsId String
  baseParts BaseParts @relation(fields: [basePartsId], references: [id])
  partsId String 
  parts Parts  @relation(fields: [partsId], references: [id])
    @@id([basePartsId, partsId])
}

model Parts {
  id String @id
  name String //部位名
  description String?
  baseParts BaseParts_Parts[] 
  price Price[]
}

////////////////////////////////////////

model Irradiation{
  id String @id
  name String  //レーザー名、IPL名
  skinColor Int
  type IrradiationType
  method IrradiationMethod
  painCoefficient Int @default(1) //痛み計算の係数
  hairs Irradiation_Hair[]
  machines Machine_Irradiation[]
}

enum IrradiationType {
  shot
  shr
}

enum IrradiationMethod {
  laser
  ipl
}

////////////////////////////////////////

model Hair {
  id String @id
  kind String
  pain Int
  irradiations Irradiation_Hair[]
}

model  Irradiation_Hair {
  irradiationId String
  irradiation Irradiation  @relation(fields: [irradiationId], references: [id])
  hairId String 
  hair Hair @relation(fields: [hairId], references: [id])
  @@id([irradiationId, hairId])
}

model  Machine_Irradiation {
  irradiationId String
  irradiation Irradiation  @relation(fields: [irradiationId], references: [id])
  machineId String 
  machine Machine @relation(fields: [machineId], references: [id])
  @@id([irradiationId, machineId])
}

model Machine {
  id String @id
  name String @default("クリニック名") //機器名
  clinic Clinic_Machine[] 
  irradiations Machine_Irradiation[]
  prices Price[]
}

model  Clinic_Machine {
  clinicId String
  clinic Clinic  @relation(fields: [clinicId], references: [id])
  machineId String 
  machine Machine @relation(fields: [machineId], references: [id])
  @@id([clinicId, machineId])

}

model Clinic {
  id String @id
  name String
  nearestStation String
  address String //住所
  tax String?
  tel String?
  url String
  priority Int @unique
  areaId String
  area Area @relation(fields: [areaId], references: [id])
  clinicGroupId String?
  clinicGroup ClinicGroup? @relation(fields: [clinicGroupId], references: [id])
  interior String?  //内装
  cardPay String?
  medhicalLoan String?
  campaign String?  //キャンペーン
  studentDiscount String?   //学割
  reserve Boolean @default(false)
  review Int?
  roomType String?
  staffGender Gender @default(both) /// 施術スタッフの性別 
  restriction Gender? /// 女性専用 | 男性専用
  openingDate DateTime ? @db.Date /// 開院日=ノウハウ年数 グループ院で脱毛症例があればOK （月日不明の場合は1月1日)
  numOfCases Int? @default(0) /// 対応した症例数
  machine Clinic_Machine[] 
  clinicOpeningHours ClinicOpeningHours[] 
  // clinicOption ClinicOption?  
  price Price[]
  youtube Youtube[]
  twitter Twitter[]
  instagram Instagram[]
  google Google[]
  picture Picture[]
  options Option[]
  discount Discount[]
  creditPay CreditPay?
  clinicFeature ClinicFeature?
  staff Staff?
  facility Facility?
  qrPay QRPay?
}

enum Gender {
  men
  lady
  both
}

//クリニックの特徴
model ClinicFeature {
  id String @id
  celebAttend Boolean @default(false) ///有名人が通っている(いた)
  epiOther Boolean @default(false)  //脱毛以外の施術があるか（美容皮膚科全般のノウハウ）
  appearTV Boolean @default(false)  //TV出演の有無
  popularMenu Boolean @default(false)  //クリニックの人気メニューが脱毛か
  machineImprove Boolean @default(false)  //脱毛器の開発に貢献（フィードバックを積極的にしている）
  drsCosme Boolean @default(false)  //ドクターズコスメが無料で使える
  noSoliciting Int @default(0) ///無理な勧誘の評価 数値が高いほど優良 なし: 1 
  onlyEachPay Boolean @default(false)  //都度払いのみの取り扱い
  clinicId String @unique
  clinic Clinic @relation(fields: [clinicId], references: [id])
}

model Staff {
  id String @id
  doctor Gender @default(both) //医師の性別
  nurse Gender @default(lady) //看護師・カウンセラーの性別
  treatment Position?  //施術する人の役職
  counseling Position? //カウンセリングする人の役職
  counselingNomi NominateEnum? //カウンセリングの指名
  treatmentNomi NominateEnum? //施術の指名
  examineNomi NominateEnum? //診察の指名
  training Int @default(0)  //初期研修の期間 単位/週 1ヶ月は４週
  internalStudy Boolean @default(false) //院内での定期勉強会の実施
  outsideStudy Boolean @default(false) //外部での定期勉強会、医学会、研究活動などの実施（外部の方を呼ぶもOK）
  clinicId String @unique
  clinic Clinic @relation(fields: [clinicId], references: [id])
}

//施術する人の役職
enum Position { 
  doctor
  nurse //看護師・カウンセラー
  doctorAndNurse
}

enum NominateEnum { 
  no //指名できない
  gender /// 性別で指名ができる
  byName /// 人物での指名ができる
}

//院内施設
model Facility { 
  id String @id
  beauty Int @default(0) // 1: 標準 2:綺麗 3:豪華 4:贅沢 0:不明
  examination RoomType? // //診察室
  waiting RoomType? //待合室
  counseling RoomType? //カウンセリングルーム
  treatment RoomType? // //施術室
  powder RoomType? //化粧室
  clinicId String @unique
  clinic Clinic @relation(fields: [clinicId], references: [id])
}

 enum RoomType { 
  open // 仕切り等なし
  partition //パーティションで仕切り（カーテン含む）
  entPartition //入口のみパーティションで仕切り（カーテン含む）
  private //個室
  completePrivate //完全個室
}

model Youtube {
  id String @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  code String
  clinicId String
  clinic Clinic @relation(fields: [clinicId], references: [id])
}

model Instagram {
  id String @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  code String
  clinicId String
  clinic Clinic @relation(fields: [clinicId], references: [id])
}

model Twitter {
  id String @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  code String
  clinicId String
  clinic Clinic @relation(fields: [clinicId], references: [id])
}

model Google {
  id String @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  code String
  kind String @default("street_view")
  clinicId String
  clinic Clinic @relation(fields: [clinicId], references: [id])
}

model Picture {
  id String @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
  authority String
  authorityUrl String
  url String
  clinicId String
  clinic Clinic @relation(fields: [clinicId], references: [id])
}
		
model Area {
  id String @id
  area String //地区名
  url String @default("#")
  description String? //説明
  registrationNumber Int @default(0) //地区に登録されているクリニック数
  clinic Clinic[]
}


model ClinicGroup {
  id String @id
  exampleClinic String //クリニック例
  groupName String //クリニックグループ名
  clinic Clinic[]
}


model ClinicOpeningHours {
  id String  @id
  startHours DateTime @db.Timetz(0) @default(now())  //開始時間
  endHours DateTime @db.Timetz(0)  @default(now()) //開始時間
  description String?   //備考
  mon Boolean
  thu Boolean
  wed Boolean
  thir Boolean
  fri Boolean
  sat Boolean
  sun Boolean
  hol Boolean
  clinicId String
  clinic Clinic @relation(fields: [clinicId], references: [id])
}


// model ClinicOption {
//   id String @id
//   irradiationLeakage String?   //照射漏れ
//   aftercare String? //アフターケア
//   anesthesia String?  //麻酔
//   contractCancellation String?   //途中解約
//   firstVisitFees String?   //初診料
//   subsequentVisitFees String?   //再診料
//   shaving String?   //剃毛料
//   troubleTreatment String?   //トラブル対応
//   clinicId String @unique
//   clinic Clinic @relation(fields: [clinicId], references: [id])
// }

model Discount {
  id String @id
  kind DiscountKind
  terms String?
  clinicId String
  clinic Clinic @relation(fields: [clinicId], references: [id])
}

enum DiscountKind {
  student //学割・学生料金
  pair //ペア割
  override //乗り換え割
  firstVisit //初回割
  referral //紹介割
  sameDayContr //即日契約割
}

model Option {
  id String @id
  price Int
  unit Int @default(1) //単位があれば。0は無制限
  terms String? //条件
  moreCharge Boolean @default(false)
  kind OptionKind
  // moreCounseling： termsに回数指定 NULLは無制限
  clinicId String
  clinic Clinic @relation(fields: [clinicId], references: [id])
}

enum OptionKind {
  //麻酔
  anesthesia // 種類不明
  tapeAnesth  //テープ麻酔
  surfaceAnesth //表面麻酔
  gasAnesth //笑気麻酔
  //
  //カウンセリング
  sameDayTreatment //カウンセリング同日に施術
  counseling //カウンセリング
  //
  //剃毛
  shaving //剃り残しのみ
  fullShaving //剃毛
   //
  leakage //照射もれ
  curing //硬化毛の対応
  aftercare //アフターケア
  contract //解約での返金
  firstVisitFees //初診料
  revisitFees //再診料
  skinTrouble //肌トラブル対応
  cancel //キャンセル料
}

model Price {
  id String @id
  name String  //部位名
  gender Gender @default(both)
  times Int  //回数 0:年間プラン
  price Int //総額料金
  oncePrice Int //1回料金
  terms String? //備考
  expiration Int @default(0) //有効期限 単位は月 0は期限なし/1000は期限ありのみ
  firstLimited Boolean @default(false) // 初回限定のコースか否か
  afterCourse Boolean @default(false) //コース終了後の価格か否か
  onlyWeekday Boolean @default(false) //平日のみか否か
  fluctuate Boolean @default(false) //掲載の料金から異なる可能性（範囲の違いなどによる）
  treatmentTime Int @default(0) //施術にかかる時間 単位/分
  daysRequired Int @default(0) //所要日数 (全身は2日間かかるとこもあるらしい) 0：不明
  machineId String? //脱毛器の指定がある場合に記載 外部キー戻す↓
  machine Machine?  @relation(fields: [machineId], references: [id])
  partsId String
  parts Parts  @relation(fields: [partsId], references: [id])
  clinicId String
  clinic Clinic  @relation(fields: [clinicId], references: [id])
}

model CreditPay {
  id String @id
  visa Boolean
  master Boolean
  nicos Boolean
  dc Boolean
  uc Boolean
  ufj Boolean
  amex Boolean
  jcb Boolean
  diners Boolean
  clinicId String @unique
  clinic Clinic  @relation(fields: [clinicId], references: [id])
}

model QRPay {
  id String @id
  line Boolean
  wechatPay Boolean
  aliPay Boolean
  clinicId String @unique
  clinic Clinic  @relation(fields: [clinicId], references: [id])
}

model Action {
 id Int @id @default(autoincrement())
 time DateTime 
 data String
 kind ActionEnum
}

enum ActionEnum {
  external //外部リンク
  search //プラン検索
}