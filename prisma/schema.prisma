// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model OriginCategory {
  id String @id
  name String //広域カテゴリ名
  imgUrlLady String //女性の画像
  imgUrlMen String //男性の画像
  aboutCategory AboutCategory[]
}

model AboutCategory {
  id String  @id
  name String
  imgUrlLady String
  imgUrlMen String
  set Boolean
  tableName String
  originId String
  origin OriginCategory @relation(fields: [originId], references: [id])
  baseParts BaseParts[]
}

model BaseParts {
  id String @id
  name String //部位名
  description String? //備考
  gender Int @default(3)
  aboutCategoryId String
  aboutCategory AboutCategory @relation(fields: [aboutCategoryId], references: [id])
  parts BaseParts_Parts[] 
}

model BaseParts_Parts {
  basePartsId String
  baseParts BaseParts @relation(fields: [basePartsId], references: [id])
  partsId String 
  parts Parts  @relation(fields: [partsId], references: [id])
    @@id([basePartsId, partsId])
}

model Parts {
  id String @id
  name String //部位名
  places Int //箇所数
  baseParts BaseParts_Parts[] 
priceAllBody PriceAllBody[]
priceArm PriceArm[]
priceBackBody PriceBackBody[]
priceBodySet PriceBodySet[]
priceFaceSet PriceFaceSet[]
priceFrontBody PriceFrontBody[]
priceLeg PriceLeg[]
priceLimb PriceLimb[]
priceLowerBody PriceLowerBody[]
priceLowerFace PriceLowerFace[]
priceRange PriceRange[]
priceSelect PriceSelect[]
priceTime PriceTime[]
priceUpperBody PriceUpperBody[]
priceUpperFace PriceUpperFace[]
priceVioSet PriceVioSet[]
priceVio PriceVio[]
}


model MachineHr {
  id String @id
  hairType String //毛の状態
  pain Int //痛み
  shotDetail String  //ショット詳細
  shotType String  //照射のタイプ
  skinColor Int  //対応可能な肌の色 1: 白色のみOK 2:薄茶色までOK 3:色黒までOK
  machine Machine[]
}

model MachineShr {
  id String @id
  hairType String //毛の状態
  pain Int //痛み
  shotDetail String  //ショット詳細
  shotType String  //照射のタイプ
  skinColor Int  //対応可能な肌の色 1: 白色のみOK 2:薄茶色までOK 3:色黒までOK
  machine Machine[]
}

model Machine {
  id String @id
  name String @default("クリニック名") //機器名
  machineHrId String?  //HR機器ID
  machineHr MachineHr? @relation(fields: [machineHrId], references: [id])
  machineShrId String?  //SHR機器ID
  machineShr MachineShr?  @relation(fields: [machineShrId], references: [id])
  clinic Clinic_Machine[] 
}


model  Clinic_Machine {
  clinicId String
  clinic Clinic  @relation(fields: [clinicId], references: [id])
  machineId String 
  machine Machine @relation(fields: [machineId], references: [id])
  @@id([clinicId, machineId])

}

model Clinic {
  id String @id
  interior String?  //内装
  address String //住所
  cardPay String?
  medhicalLoan String?
  name String
  nearestStation String
  reserve String?
  review Int?
  roomType String?
  staffGender Int  @default(0) //'0:不明 1:女性 2:男性 3:女性男性',
  tax String?
  tel String?
  url String
  areaId String
  area ClinicArea @relation(fields: [areaId], references: [id])
  clinicGroupId String?
  clinicGroup ClinicGroup? @relation(fields: [clinicGroupId], references: [id])
  machine Clinic_Machine[] 
  clinicOpeningHours ClinicOpeningHours[] 
  clinicOption ClinicOption?  
  priceAllBody PriceAllBody[]
priceArm PriceArm[]
priceBackBody PriceBackBody[]
priceBodySet PriceBodySet[]
priceFaceSet PriceFaceSet[]
priceFrontBody PriceFrontBody[]
priceLeg PriceLeg[]
priceLimb PriceLimb[]
priceLowerBody PriceLowerBody[]
priceLowerFace PriceLowerFace[]
priceRange PriceRange[]
priceSelect PriceSelect[]
priceTime PriceTime[]
priceUpperBody PriceUpperBody[]
priceUpperFace PriceUpperFace[]
priceVioSet PriceVioSet[]
priceVio PriceVio[]

}

model ClinicArea {
  id String @id
  area String //地区名
  url String
  description String? //説明
  registrationNumber Int @default(0) //地区に登録されているクリニック数
  clinic Clinic[]
}


model ClinicGroup {
  id String @id
  exampleClinic String //クリニック例
  groupName String //クリニックグループ名
  clinic Clinic[]
}


model ClinicOpeningHours {
  id String  @id
  startHours String  //開始時間
  endHours String   //終了時間
  description String?   //備考
  mon Boolean
  thu Boolean
  wed Boolean
  thir Boolean
  fri Boolean
  sat Boolean
  sun Boolean
  hol Boolean
  clinicId String
  clinic Clinic @relation(fields: [clinicId], references: [id])
}


model ClinicOption {
  id String @id
  irradiationLeakage String?   //照射漏れ
  aftercare String? //アフターケア
  anesthesia String?  //麻酔
  campaign String?  //キャンペーン
  contractCancellation String?   //途中解約
  firstVisitFees String?   //初診料
  subsequentVisitFees String?   //再診料
  shaving String?   //剃毛料
  studentDiscount String?   //学割
  troubleTreatment String?   //トラブル対応
  clinicId String
  clinic Clinic @relation(fields: [clinicId], references: [id])
}


//同スキーマ
model PriceAllBody {
  id String @id
  name String  //部位名
  gender Int  //性別 1:女性 2:男性 3:女性男性
  times Int  //回数 0:年間プラン
  price Int //総額料金
  oncePrice Int //1回料金
  description String? //備考
  partsId String
  parts Parts  @relation(fields: [partsId], references: [id])
  clinicId String
  clinic Clinic  @relation(fields: [clinicId], references: [id])
}

model PriceArm {
  id String @id
  name String  //部位名
  gender Int  //性別 1:女性 2:男性 3:女性男性
  times Int  //回数 0:年間プラン
  price Int //総額料金
  oncePrice Int //1回料金
  description String? //備考
  partsId String
  parts Parts  @relation(fields: [partsId], references: [id])
  clinicId String
  clinic Clinic  @relation(fields: [clinicId], references: [id])
}

model PriceBackBody {
  id String @id
  name String  //部位名
  gender Int  //性別 1:女性 2:男性 3:女性男性
  times Int  //回数 0:年間プラン
  price Int //総額料金
  oncePrice Int //1回料金
  description String? //備考
  partsId String
  parts Parts  @relation(fields: [partsId], references: [id])
  clinicId String
  clinic Clinic  @relation(fields: [clinicId], references: [id])
}

model PriceBodySet {
  id String @id
  name String  //部位名
  gender Int  //性別 1:女性 2:男性 3:女性男性
  times Int  //回数 0:年間プラン
  price Int //総額料金
  oncePrice Int //1回料金
  description String? //備考
  partsId String
  parts Parts  @relation(fields: [partsId], references: [id])
  clinicId String
  clinic Clinic  @relation(fields: [clinicId], references: [id])
}

model PriceFaceSet {
  id String @id
  name String  //部位名
  gender Int  //性別 1:女性 2:男性 3:女性男性
  times Int  //回数 0:年間プラン
  price Int //総額料金
  oncePrice Int //1回料金
  description String? //備考
  partsId String
  parts Parts  @relation(fields: [partsId], references: [id])
  clinicId String
  clinic Clinic  @relation(fields: [clinicId], references: [id])
}

model PriceFrontBody {
  id String @id
  name String  //部位名
  gender Int  //性別 1:女性 2:男性 3:女性男性
  times Int  //回数 0:年間プラン
  price Int //総額料金
  oncePrice Int //1回料金
  description String? //備考
  partsId String
  parts Parts  @relation(fields: [partsId], references: [id])
  clinicId String
  clinic Clinic  @relation(fields: [clinicId], references: [id])
}

model PriceLeg {
  id String @id
  name String  //部位名
  gender Int  //性別 1:女性 2:男性 3:女性男性
  times Int  //回数 0:年間プラン
  price Int //総額料金
  oncePrice Int //1回料金
  description String? //備考
  partsId String
  parts Parts  @relation(fields: [partsId], references: [id])
  clinicId String
  clinic Clinic  @relation(fields: [clinicId], references: [id])
}

model PriceLimb {
  id String @id
  name String  //部位名
  gender Int  //性別 1:女性 2:男性 3:女性男性
  times Int  //回数 0:年間プラン
  price Int //総額料金
  oncePrice Int //1回料金
  description String? //備考
  partsId String
  parts Parts  @relation(fields: [partsId], references: [id])
  clinicId String
  clinic Clinic  @relation(fields: [clinicId], references: [id])
}

model PriceLowerBody {
  id String @id
  name String  //部位名
  gender Int  //性別 1:女性 2:男性 3:女性男性
  times Int  //回数 0:年間プラン
  price Int //総額料金
  oncePrice Int //1回料金
  description String? //備考
  partsId String
  parts Parts  @relation(fields: [partsId], references: [id])
  clinicId String
  clinic Clinic  @relation(fields: [clinicId], references: [id])
}

model PriceLowerFace {
  id String @id
  name String  //部位名
  gender Int  //性別 1:女性 2:男性 3:女性男性
  times Int  //回数 0:年間プラン
  price Int //総額料金
  oncePrice Int //1回料金
  description String? //備考
  partsId String
  parts Parts  @relation(fields: [partsId], references: [id])
  clinicId String
  clinic Clinic  @relation(fields: [clinicId], references: [id])
}

model PriceRange {
  id String @id
  name String  //部位名
  gender Int  //性別 1:女性 2:男性 3:女性男性
  times Int  //回数 0:年間プラン
  price Int //総額料金
  oncePrice Int //1回料金
  description String? //備考
  partsId String
  parts Parts  @relation(fields: [partsId], references: [id])
  clinicId String
  clinic Clinic  @relation(fields: [clinicId], references: [id])
}

model PriceSelect {
  id String @id
  name String  //部位名
  gender Int  //性別 1:女性 2:男性 3:女性男性
  times Int  //回数 0:年間プラン
  price Int //総額料金
  oncePrice Int //1回料金
  description String? //備考
  partsId String
  parts Parts  @relation(fields: [partsId], references: [id])
  clinicId String
  clinic Clinic  @relation(fields: [clinicId], references: [id])
}

model PriceTime {
  id String @id
  name String  //部位名
  gender Int  //性別 1:女性 2:男性 3:女性男性
  times Int  //回数 0:年間プラン
  price Int //総額料金
  oncePrice Int //1回料金
  description String? //備考
  partsId String
  parts Parts  @relation(fields: [partsId], references: [id])
  clinicId String
  clinic Clinic  @relation(fields: [clinicId], references: [id])
}

model PriceUpperBody {
  id String @id
  name String  //部位名
  gender Int  //性別 1:女性 2:男性 3:女性男性
  times Int  //回数 0:年間プラン
  price Int //総額料金
  oncePrice Int //1回料金
  description String? //備考
  partsId String
  parts Parts  @relation(fields: [partsId], references: [id])
  clinicId String
  clinic Clinic  @relation(fields: [clinicId], references: [id])
}

model PriceUpperFace {
  id String @id
  name String  //部位名
  gender Int  //性別 1:女性 2:男性 3:女性男性
  times Int  //回数 0:年間プラン
  price Int //総額料金
  oncePrice Int //1回料金
  description String? //備考
  partsId String
  parts Parts  @relation(fields: [partsId], references: [id])
  clinicId String
  clinic Clinic  @relation(fields: [clinicId], references: [id])
}

model PriceVioSet {
  id String @id
  name String  //部位名
  gender Int  //性別 1:女性 2:男性 3:女性男性
  times Int  //回数 0:年間プラン
  price Int //総額料金
  oncePrice Int //1回料金
  description String? //備考
  partsId String
  parts Parts  @relation(fields: [partsId], references: [id])
  clinicId String
  clinic Clinic  @relation(fields: [clinicId], references: [id])
}

model PriceVio {
  id String @id
  name String  //部位名
  gender Int  //性別 1:女性 2:男性 3:女性男性
  times Int  //回数 0:年間プラン
  price Int //総額料金
  oncePrice Int //1回料金
  description String? //備考
  partsId String
  parts Parts  @relation(fields: [partsId], references: [id])
  clinicId String
  clinic Clinic  @relation(fields: [clinicId], references: [id])
}

